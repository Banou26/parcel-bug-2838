{"version":3,"sources":["index.js"],"names":["observable","Observable","create","observer","bundler","ParcelBundler","target","on","entryFiles","next","name","buildStartTime","Date","now","bundle","_","stop","pipe","subscribe","bundleWrapper","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,UAAU,GACd,cACEC,iBAAWC,MAAX,CAAkBC,QAAQ,IAAI;AAC5B,QAAMC,OAAO,GAAG,IAAIC,sBAAJ,CAAkB,gBAAlB,EAAoC;AAClDC,IAAAA,MAAM,EAAE,SAD0C,CAElD;;AAFkD,GAApC,CAAhB;AAKAF,EAAAA,OAAO,CAACG,EAAR,CAAW,YAAX,EAAyBC,UAAU,IACjCL,QAAQ,CAACM,IAAT,CAAc;AAAEC,IAAAA,IAAI,EAAE,YAAR;AAAsBF,IAAAA,UAAtB;AAAmCG,IAAAA,cAAc,EAAEC,IAAI,CAACC,GAAL;AAAnD,GAAd,CADF;AAGAT,EAAAA,OAAO,CAACU,MAAR;AACA,SAAOC,CAAC,IAAIX,OAAO,CAACY,IAAR,EAAZ;AACD,CAXD,CADF,EAaEC,IAbF,CAcE,yBAAWb,OAAF,IACP,iBACIA,OAAO,CAACa,IAAR,CACE,uBAAO,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAcA,IAAI,KAAK,YAA9B,CADF,CADJ,EAIIN,OAAO,CAACa,IAAR,CACE,uBAAO,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAcA,IAAI,KAAK,SAA9B,CADF,CAJJ,CADF,CAdF,CADF;AA2BAV,UAAU,CAACkB,SAAX,CAAqBC,aAAa,IAAIC,OAAO,CAACC,GAAR,CAAa,OAAMF,aAAa,CAACT,IAAK,MAAtC,CAAtC","file":"index.map","sourceRoot":"..","sourcesContent":["import { Observable, of, merge } from 'rxjs'\r\nimport { mergeMap, filter } from 'rxjs/operators'\r\nimport ParcelBundler from 'parcel-bundler'\r\n\r\nconst observable =\r\n  of(\r\n    Observable.create(observer => {\r\n      const bundler = new ParcelBundler('./test.spec.js', {\r\n        target: 'browser',\r\n        // hmr: false // Throw even more errors\r\n      })\r\n      \r\n      bundler.on('buildStart', entryFiles  =>\r\n        observer.next({ name: 'buildStart', entryFiles , buildStartTime: Date.now() }))\r\n\r\n      bundler.bundle()\r\n      return _ => bundler.stop()\r\n    })\r\n  ).pipe(\r\n    mergeMap(( bundler ) =>\r\n      merge(\r\n          bundler.pipe(\r\n            filter(({ name }) => name === 'buildStart')\r\n          ),\r\n          bundler.pipe(\r\n            filter(({ name }) => name === 'bundled')\r\n          )\r\n      )\r\n    )\r\n  )\r\n\r\nobservable.subscribe(bundleWrapper => console.log(`\\n\\n${bundleWrapper.name}\\n\\n`))\r\n"]}